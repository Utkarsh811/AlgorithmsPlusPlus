Given an array Arr of size N, print second largest element from an array.

Example 1:

Input: 
N = 6
Arr[] = {12, 35, 1, 10, 34, 1}
Output: 34
Explanation: The largest element of the 
array is 35 and the second largest element
is 34.
Example 2:

Input: 
N = 3
Arr[] = {10, 5, 10}
Output: 5
Explanation: The largest element of 
the array is 10 and the second 
largest element is 5.
Your Task:
You don't need to read input or print anything. Your task is to complete the function print2largest() which takes the array of integers arr and n as parameters and returns an integer denoting the answer. If 2nd largest element doesn't exist then return -1.

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ N ≤ 105
1 ≤ Arri ≤ 105


CODE


//User function Template for Java

class Solution {
    int print2largest(int arr[], int n) {
        // code here
        int index=1;
        int length=arr.length;
        int largest=arr[0];
        while(index<length){
            if(arr[index]>largest)
            {
                largest=arr[index];
            }
            index++;
            
        }
        int slargest=0;
        index=0;
        int flag=1;
        while(index<length)
        {
            if(arr[index]<largest)
            {
                
                if(flag==1){
                slargest=arr[index];
                flag=0;
                index++;
                continue;
                }
                
                if(arr[index]>slargest)
                {
                    slargest=arr[index];
                }
            }
            index++;
            
        }
        
        //System.out.println(largest);
        //System.out.println(slargest);
        if(slargest==0){
            return -1;
            
        }
        else{
        return slargest;
        }
    }
}